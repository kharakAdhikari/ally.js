{"version":3,"sources":["../../src/util/compare-position.js"],"names":["getParentComparator","parent","element","includeSelf","isChildOf","node","shadowParent","Boolean","compareDocumentPosition","Node","DOCUMENT_POSITION_CONTAINED_BY","isParentOf","TypeError"],"mappings":";;;;;QAagBA,mB,GAAAA,mB;;AAFhB;;AAEO,SAASA,mBAAT,GAAkE;AAAA,iFAAJ,EAAI;AAAA,MAApCC,MAAoC,QAApCA,MAAoC;AAAA,MAA5BC,OAA4B,QAA5BA,OAA4B;AAAA,MAAnBC,WAAmB,QAAnBA,WAAmB;;AACvE,MAAIF,MAAJ,EAAY;AACV,WAAO,SAASG,SAAT,CAAmBC,IAAnB,EAAyB;AAC9B,UAAMC,eAAe,sCAAgBD,IAAhB,CAArB;AACA,aAAOE,QACJJ,eAAeE,SAASJ,MAAxB,IACIK,iBAAiBL,MADtB,IAEGA,OAAOO,uBAAP,CAA+BH,IAA/B,IAAuCI,KAAKC,8BAF/C,IAGIJ,gBACCL,OAAOO,uBAAP,CAA+BF,YAA/B,IAA+CG,KAAKC,8BALpD,CAAP;AAOD,KATD;AAUD,GAXD,MAWO,IAAIR,OAAJ,EAAa;AAClB,WAAO,SAASS,UAAT,CAAoBN,IAApB,EAA0B;AAC/B,UAAMC,eAAe,sCAAgBJ,OAAhB,CAArB;AACA,aAAOK,QACJJ,eAAeD,YAAYG,IAA3B,IACIC,iBAAiBD,IADtB,IAEGA,KAAKG,uBAAL,CAA6BN,OAA7B,IAAwCO,KAAKC,8BAFhD,IAGIJ,gBACCD,KAAKG,uBAAL,CAA6BF,YAA7B,IAA6CG,KAAKC,8BALlD,CAAP;AAOD,KATD;AAUD;;AAED,QAAM,IAAIE,SAAJ,CAAc,6FAAd,CAAN;AACD;AAtCD;AACA;;AAEA;AACA","file":"compare-position.js","sourcesContent":["\n// Node.compareDocumentPosition is available since IE9\n// see https://developer.mozilla.org/en-US/docs/Web/API/Node.compareDocumentPosition\n\n// callback returns true when element is contained by parent or is the parent suited for use with Array.some()\n/*\n  USAGE:\n    var isChildOf = getParentComparator({parent: someNode});\n    listOfElements.some(isChildOf)\n*/\n\nimport {getShadowParent} from './get-shadow-parent';\n\nexport function getParentComparator({parent, element, includeSelf} = {}) {\n  if (parent) {\n    return function isChildOf(node) {\n      const shadowParent = getShadowParent(node);\n      return Boolean(\n        (includeSelf && node === parent\n          || shadowParent === parent)\n        || parent.compareDocumentPosition(node) & Node.DOCUMENT_POSITION_CONTAINED_BY\n        || (shadowParent\n          && parent.compareDocumentPosition(shadowParent) & Node.DOCUMENT_POSITION_CONTAINED_BY)\n      );\n    };\n  } else if (element) {\n    return function isParentOf(node) {\n      const shadowParent = getShadowParent(element);\n      return Boolean(\n        (includeSelf && element === node\n          || shadowParent === node)\n        || node.compareDocumentPosition(element) & Node.DOCUMENT_POSITION_CONTAINED_BY\n        || (shadowParent\n          && node.compareDocumentPosition(shadowParent) & Node.DOCUMENT_POSITION_CONTAINED_BY)\n      );\n    };\n  }\n\n  throw new TypeError('util/compare-position#getParentComparator required either options.parent or options.element');\n}\n"]}